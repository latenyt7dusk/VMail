/*
 * 
 * 
 * 
 */
package Email;

import java.awt.Cursor;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Insets;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author HERU
 */
public class MailUI extends javax.swing.JFrame {

    private Properties myProps = new Properties();
    private List<File> files = new ArrayList();
    private MailClient mail;
    private Map<String, String> filemap = new HashMap<>();
    //private String smtphost = "smtp.gmail.com";
    private String user, pass, smtphost, name, link, company, position, contact, logo, htmlbody;
    private JFileChooser Imagechooser = new JFileChooser() {
        {
            setAcceptAllFileFilterUsed(true);
            setFileSelectionMode(JFileChooser.FILES_ONLY);
            setMultiSelectionEnabled(false);
            setApproveButtonText("Select");
        }
    };

    private boolean sending = false;

    private class FileAttachment extends JButton {

        private FileAttachment(String text) {
            super("");
            try {
                setBorderPainted(false);
                setFocusPainted(false);
                setContentAreaFilled(false);
                setFocusable(false);
                setCursor(new Cursor(Cursor.HAND_CURSOR));
                setName(name);
                setMargin(new Insets(1, 2, 1, 2));
                setText(text);
                setFont(getFont().deriveFont(8));

                if (text.toUpperCase().contains(".PNG") || text.toUpperCase().contains(".JPG") || text.toUpperCase().contains(".BMP") || text.toUpperCase().contains(".GIF")) {
                    setIcon(new ImageIcon(ImageIO.read(getClass().getResource("Images-icon.png"))));
                } else if (text.toUpperCase().contains(".XLS") || text.toUpperCase().contains(".XLSX") || text.toUpperCase().contains(".XLSB")) {
                    setIcon(new ImageIcon(ImageIO.read(getClass().getResource("Excel-icon.png"))));
                } else if (text.toUpperCase().contains(".DOC") || text.toUpperCase().contains(".DOCX")) {
                    setIcon(new ImageIcon(ImageIO.read(getClass().getResource("Word-2-icon.png"))));
                } else if (text.toUpperCase().contains(".PDF")) {
                    setIcon(new ImageIcon(ImageIO.read(getClass().getResource("Adobe-PDF-Document-icon.png"))));
                } else {
                    setIcon(new ImageIcon(ImageIO.read(getClass().getResource("Document-Attach.png"))));
                }

            } catch (IOException ex) {
                Logger.getLogger(MailUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    /**
     * Creates new form Tester
     */
    public MailUI() {
        try {
            initComponents();
            setIconImage(ImageIO.read(getClass().getResource("/Email/VMail.png")));
        } catch (IOException ex) {
            Logger.getLogger(MailUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void getProps() throws IOException {
        InputStream IS = null;
        try {
            IS = new FileInputStream(new File(System.getProperty("user.home") + File.separator + "Nakpil Softwares" + File.separator + "VMail" + File.separator + "VMail.def"));
            myProps.load(IS);
            user = myProps.getProperty("USERNAME");
            pass = myProps.getProperty("PASSWORD");
            smtphost = myProps.getProperty("HOST");
            name = myProps.getProperty("NAME");
            link = myProps.getProperty("LINK");
            company = myProps.getProperty("COMPANY");
            position = myProps.getProperty("POSITION");
            contact = myProps.getProperty("CONTACT");
            logo = myProps.getProperty("LOGO");
        } catch (Exception er) {
            JOptionPane.showMessageDialog(this, "Error Loading System Properties");
        } finally {
            if (IS != null) {
                IS.close();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jTextField3 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Send Mail");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jTextField1.setText("kelvin.nakpil.heru@gmail.com");

        jTextField2.setText("Subject");

        jTextPane1.setContentType("text/html"); // NOI18N
        jTextPane1.setText("<p style=\"margin-top: 0\">\r\n      \r\n</p>\r");
        jScrollPane2.setViewportView(jTextPane1);

        jTextField3.setText("Good Day,");

        jButton5.setText("Attach File");
        jButton5.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("TO");

        jButton7.setText("CC");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.X_AXIS));

        jLabel1.setBackground(new java.awt.Color(51, 153, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Body");
        jLabel1.setOpaque(true);

        jButton4.setText("Send");
        jButton4.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/Email/16x16 Loading.gif"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setText("Remove All");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jTextField2))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane2))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jButton7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(jButton6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButton1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (sending == false) {
            try {
                new Thread() {
                    @Override
                    public void run() {
                        try {
                            getProps();
                        } catch (IOException ex) {
                            Logger.getLogger(MailUI.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        sending = true;
                        jButton5.setEnabled(false);
                        mail = new MailClient(user, pass, smtphost);
                        htmlbody = mail.getDefaultTemplate(jTextField2.getText(), jTextField3.getText(), HTMLBodyWriter.parse(jTextPane1), company, name, position, contact, link);
                        filemap.put("logo", logo);
                        jButton4.setIcon(new ImageIcon(getClass().getResource("/Email/ajax-loading.gif")));
                        jButton4.setText("Sending");
                        jButton4.setBorderPainted(false);
                        jButton4.setContentAreaFilled(false);
                        jButton4.setFocusPainted(false);
                        jButton1.setEnabled(false);
                        if (mail.SendInlineImage(jTextField1.getText(), jTextField2.getText(), htmlbody, filemap)) {
                            jButton4.setIcon(null);
                            jButton4.setText("Send");
                            JOptionPane.showMessageDialog(MailUI.this, "Message Sent");
                            dispose();
                        } else {
                            jButton4.setBorderPainted(true);
                            jButton4.setContentAreaFilled(true);
                            jButton4.setFocusPainted(true);
                            jButton5.setEnabled(true);
                            jButton4.setIcon(null);
                            jButton4.setText("Send");
                            jButton1.setEnabled((files.size() > 0));
                            JOptionPane.showMessageDialog(MailUI.this, "Sending Message Failed", "Sending Failure", JOptionPane.WARNING_MESSAGE);
                        }
                        sending = false;
                    }
                }.start();

            } catch (Exception er) {
                er.printStackTrace(System.out);
            }
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        try {
            int i = Imagechooser.showDialog(this, "Select");
            if (i == JFileChooser.APPROVE_OPTION) {
                boolean b = true;
                for (File e : files) {
                    if (e.equals(Imagechooser.getSelectedFile())) {
                        b = false;
                        break;
                    }
                }
                if (b) {
                    long size = 0;
                    for (File e : files) {
                        size = size + Files.size(e.toPath());
                    }
                    if (!((size / 1000) > 20000) && !((Files.size(Imagechooser.getSelectedFile().toPath()) / 1000) > 20000)) {
                        files.add(Imagechooser.getSelectedFile());
                        filemap.put("file_" + files.size(), Imagechooser.getSelectedFile().getAbsolutePath());
                        jPanel2.add(new FileAttachment(Imagechooser.getSelectedFile().getName()));
                        jPanel2.updateUI();
                        jButton1.setEnabled(true);
                    } else {
                        JOptionPane.showMessageDialog(this, "Cannot add more Attachments.", "20mb Attachment Limit", JOptionPane.WARNING_MESSAGE);
                    }

                }
            }
        } catch (HeadlessException | IOException er) {
            er.printStackTrace(System.out);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (files.size() > 0) {
            jPanel2.removeAll();
            jPanel2.updateUI();
            for (int i = 1; i <= files.size(); i++) {
                filemap.remove("file_" + i);
            }
            files.removeAll(files);
            jButton1.setEnabled(false);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MailUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MailUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MailUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MailUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MailUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
    

}
